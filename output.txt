Path: ./http/Views/pages/rezepte.php
Content:
<?php
// Fehlerberichterstattung einschalten
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Verbindung zur Datenbank herstellen
require_once '../../Utils/db_connect.php';

require_once '../templates/rezepte_post.php';
?>

<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <title>Rezept Hinzufügen</title>
</head>
<body>
    <h2>Neues Rezept hinzufügen</h2>
    <?php include '../templates/rezepteFormular.php'; ?>

    <h2>Vorhandene Rezepte</h2>
    <table border="1">
        <tr>
            <th>Titel</th>
            <th>Autor</th>
            <th>Untertitel</th>
            <th>Zubereitungszeit</th>
            <th>Personenanzahl</th>
            <th>Bilder</th>
            <th>Zutaten</th>
        </tr>
        <?php
        $sql = "SELECT 
        r.id, 
        r.titel, 
        r.autor, 
        r.untertitel, 
        r.bilder, 
        r.beschreibung, 
        r.zubereitungszeit, 
        r.basis_personenanzahl, 
        zn.name AS zutaten_name, 
        rz.menge, 
        e.name AS einheit
    FROM 
        rezepte r
    LEFT JOIN 
        rezept_zutaten rz ON r.id = rz.rezept_id
    LEFT JOIN 
        zutaten z ON rz.zutat_id = z.id
    LEFT JOIN 
        zutaten_namen zn ON z.id = zn.zutat_id
    LEFT JOIN 
        einheiten e ON rz.einheit_id = e.id
    GROUP BY 
        r.id, rz.zutat_id
    ORDER BY 
        r.id, zn.name;
    ";
        $result = $conn->query($sql);

        $rezepte = [];
        if ($result->num_rows > 0) {
            while ($row = $result->fetch_assoc()) {
                $rezeptId = $row['id'];
                if (!isset($rezepte[$rezeptId])) {
                    $rezepte[$rezeptId] = [
                        'titel' => $row['titel'],
                        'autor' => $row['autor'],
                        'untertitel' => $row['untertitel'],
                        'bilder' => $row['bilder'],
                        'beschreibung' => $row['beschreibung'],
                        'zubereitungszeit' => $row['zubereitungszeit'],
                        'basis_personenanzahl' => $row['basis_personenanzahl'],
                        'zutaten' => []
                    ];
                }
                if ($row['zutaten_name']) { // Überprüfen, ob der Eintrag eine Zutat hat
                    $rezepte[$rezeptId]['zutaten'][] = htmlspecialchars($row['zutaten_name']) . " " . htmlspecialchars($row['menge']) . " " . htmlspecialchars($row['einheit']);
                }
            }

            foreach ($rezepte as $rezept) {
                echo "<tr>";
                echo "<td>" . htmlspecialchars($rezept['titel']?? '') . "</td>";
                echo "<td>" . htmlspecialchars($rezept['autor']?? '') . "</td>";
                echo "<td>" . htmlspecialchars($rezept['untertitel']?? '') . "</td>";
                echo "<td>" . htmlspecialchars($rezept['zubereitungszeit']?? '') . " Minuten</td>";
                echo "<td>" . htmlspecialchars($rezept['basis_personenanzahl']?? '') . "</td>";
                echo "<td>";
                if ($rezept['bilder']) {
                    $bilder = explode(',', $rezept['bilder']);
                    foreach ($bilder as $bild) {
                        echo "<img src='" . htmlspecialchars($bild ?? '') . "' alt='Bild' height='100' /> ";
                    }
                }
                echo "</td>";
                echo "<td>" . implode(', ', $rezept['zutaten']?? '') . "</td>";
                echo "</tr>";
            }
        } else {
            echo "<tr><td colspan='7'>Keine Rezepte gefunden.</td></tr>";
        }
        ?>
    </table>
</body>
</html>


Path: ./http/Views/templates/zutatenFormular.php
Content:
<?php
// Fehlerberichterstattung einschalten
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Verbindung zur Datenbank herstellen
require_once '../../Utils/db_connect.php';

require '../templates/einheiten_post.php';

// Funktion, um Optionen für ein Dropdown-Menü zu generieren, erweitert um den speziellen Umrechnungsfaktor-Status
function generateOptions($tableName, $idColumn, $nameColumn, $isEinheiten = false) {
    global $conn;
    $options = '';
    $sql = $isEinheiten ? "SELECT $idColumn, $nameColumn, basis_einheit_id, hat_spezifischen_umrechnungsfaktor FROM $tableName ORDER BY $nameColumn ASC" : "SELECT $idColumn, $nameColumn FROM $tableName ORDER BY $nameColumn ASC";
    $result = $conn->query($sql);
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            if ($isEinheiten) {
                $options .= "<option value='" . $row[$idColumn] . "' data-basis='" . $row['basis_einheit_id'] . "' data-spezifischer-umrechnungsfaktor='" . $row['hat_spezifischen_umrechnungsfaktor'] . "'>" . htmlspecialchars($row[$nameColumn]) . "</option>";
            } else {
                $options .= "<option value='" . $row[$idColumn] . "'>" . htmlspecialchars($row[$nameColumn]) . "</option>";
            }
        }
    }
    return $options;
}
?>
<form action= $action method="post">
    <label for="zutaten_name">Name:</label>
    <input type="text" class="zutaten_name" name="zutaten_name"><br><br>
    <div class="zutatenFormularContainer">
    
        <label for="existiertUnterAnderemNamen">Existiert die Zutat unter einem anderen Namen?</label>
        <input type="checkbox" class="existiertUnterAnderemNamen" name="existiertUnterAnderemNamen" onchange="toggleForm(this)" checked>
        
        <div class="alternativerNameContainer" style="display:block;">
            <label for="alternativerName">Anderer Name:</label>
            <input type="text" class="alternativerName" name="alternativerName"><br><br>
            <input type="submit" name="aktion_name" value="Zutat Unter Anderem Namen Hinzufügen">
        </div>

        <div class="restDesFormulars" style="display:none;">

            <label for="haltbarkeit">Haltbarkeit (in Tagen):</label>
            <input type="number" class="haltbarkeit" name="haltbarkeit" ><br><br>
      
      
            <label for="kategorie_id">Kategorie:</label>
            <select class="kategorie_id" name="kategorie_id" >
                <option value="">Bitte wählen</option>    
                <?php echo generateOptions('kategorien', 'id', 'name'); ?>
            </select><br><br>
            
            <label for="phd_kategorie_id">Planetary Health Diet Category:</label>
            <select class="phd_kategorie_id" name="phd_kategorie_id" >
                <option value="">Bitte wählen</option> 
                <?php echo generateOptions('Planetary_Health_Diet_Categories', 'ID', 'Kategorie'); ?>
            </select><br><br>
            
            <label for="einheit_id">Einheit:</label>
            <select class="einheit_id" name="einheit_id">
                <option value="">Bitte wählen</option>
                <?php echo generateOptions('einheiten', 'id', 'name', true); ?>
                <option value="neuHinzufuegen">Neu hinzufügen...</option>
            </select><br><br>
            
            <div class="neueEinheitFormular" style="display:none;"> 
                <?php require '../templates/einheitenFormular.html';?>
            </div>
            <div class="umrechnungsfaktorFeld" style="display: none;">
                <label for="umrechnungsfaktor">Umrechnungsfaktor:</label>
                <input type="number" class="umrechnungsfaktor" name="umrechnungsfaktor" step="0.01" required>
                <div> bei "spezieller Basis" ist die Referenz immer Gramm</div><br><br>
            </div>

            <div class="volumen_block" style="display:none;">
                <label for="volumen">Volumen:</label>
                <input type="text" class="volumen" name="volumen">
                Wichtig für PHD, da die Berechnung mit Gramm arbeitet<br><br>
            </div>
            <input type="submit" value="Zutat Hinzufügen">         
        </div>
    </div>
</form>


Path: ./http/Views/templates/rezepteFormular.php
Content:
    <?php
    // Fehlerberichterstattung einschalten
    ini_set('display_errors', 1);
    ini_set('display_startup_errors', 1);
    error_reporting(E_ALL);

    // Verbindung zur Datenbank herstellen
    require_once '../../Utils/db_connect.php';

    // Funktion zum Überprüfen der Existenz einer Zutat und Rückgabe eines JSON-Objekts für die Autovervollständigung
    if(isset($_GET['action']) && $_GET['action'] == 'checkZutat' && !empty($_GET['zutatName'])) {
        $zutatName = $_GET['zutatName'];

        $stmt = $conn->prepare("SELECT id, name FROM zutaten_namen WHERE name LIKE ?");
        $searchTerm = "%" . $zutatName . "%";
        $stmt->bind_param("s", $searchTerm);
        $stmt->execute();
        $result = $stmt->get_result();

        $zutaten = [];
        while($row = $result->fetch_assoc()) {
            $zutaten[] = ['id' => $row['id'], 'name' => $row['name']];
        }

        echo json_encode($zutaten);
        exit;
    }
    ?>
    <form action="rezepte_post.php" method="post" enctype="multipart/form-data">
        <label for="titel">Titel:</label><br>
        <input type="text" id="titel" name="titel" required><br>

        <label for="untertitel">Untertitel:</label><br>
        <input type="text" id="untertitel" name="untertitel"><br>

        <label for="zubereitungszeit">Zubereitungszeit (in Minuten):</label><br>
        <input type="number" id="zubereitungszeit" name="zubereitungszeit" required><br>

        <label for="basis_personenanzahl">Basis Personenanzahl:</label><br>
        <input type="number" id="basis_personenanzahl" name="basis_personenanzahl" required><br>

        <label for="bilder">Bilder:</label><br>
        <input type="file" id="bilder" name="bilder"><br>

        <div id="zutatenContainer">
        </div>
        <br>

        <input type="submit" value="Rezept Hinzufügen">
    </form>
    
<Script src="../templates/formFunctions.js" ></Script>
    <script >
document.addEventListener("DOMContentLoaded", function() {
    try {
    addZutatBlock();
} catch (error) {
    console.error("Fehler beim Hinzufügen des Zutatenblocks:", error);
}
 // Initialer Aufruf, um mindestens einen Zutatenblock hinzuzufügen
});
function addZutatBlock() {
    const container = document.getElementById('zutatenContainer');
    const newIndex = container.querySelectorAll('.zutatBlock').length;

    // Erstellen des Zutatenblocks
    const newZutatBlock = document.createElement('div');
    newZutatBlock.classList.add('zutatBlock');
    container.appendChild(newZutatBlock);

    // HTML für das Namens- und Mengenfeld sowie das Dropdown für die Einheiten
    const zutatBlockHTML = `
        <label for="zutaten_${newIndex}_name">Name:</label>
        <input type="text" id="zutaten_${newIndex}_name" name="zutaten[${newIndex}][name]" required><br><br>
        
        <label for="zutaten_${newIndex}_menge">Menge:</label>
        <input type="number" id="zutaten_${newIndex}_menge" name="zutaten[${newIndex}][menge]" required><br><br>
        
        <label for="zutaten_${newIndex}_einheit">Einheit:</label>
        <select id="zutaten_${newIndex}_einheit" name="zutaten[${newIndex}][einheit]" required>
            <option value="">Bitte wählen</option>
            <?php echo generateOptions('einheiten', 'id', 'name'); ?>
        </select><br><br>
    `;
    
    newZutatBlock.innerHTML = zutatBlockHTML;
    
    // Markierung hinzufügen und Listener für den neuen Block initialisieren
    newZutatBlock.dataset.added = "true";
    initInputListener(newZutatBlock, newIndex);
    console.log("Zutatenblock wird hinzugefügt, Index:", newIndex);

}

function initInputListener(block, index) {
    const input = block.querySelector(`#zutaten_${index}_name`);
    input.addEventListener('input', function(event) {
        const isInputFilled = event.target.value.trim() !== '';
        if (isInputFilled && !block.nextSibling) {
            addZutatBlock();
        }
    });
}

</script>


